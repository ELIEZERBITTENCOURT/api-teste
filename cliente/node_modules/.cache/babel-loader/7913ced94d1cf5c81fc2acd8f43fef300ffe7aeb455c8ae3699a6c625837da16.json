{"ast":null,"code":"import axios from \"axios\";\nimport { apiEndPoint } from \"../util/config.json\";\nimport { getTokenFromCookie, AUTH_TOKEN } from \"../util/authentication.js\";\nimport { toast } from \"react-toastify\";\naxios.interceptors.response.use(null, error => {\n  console.log(error);\n  if (!error.response) {\n    toast.info(\"Service Unavailable !!!\");\n    return {\n      status: 503,\n      data: []\n    };\n  }\n  const {\n    status,\n    data\n  } = error.response;\n  console.log(error.response);\n  if (data) {\n    if (typeof data === \"string\") toast.error(data);else toast.error(data.message);\n  }\n  return {\n    status,\n    data: []\n  };\n});\naxios.defaults.headers.post[AUTH_TOKEN] = getTokenFromCookie();\nexport const httpPost = async (requestMapping, requestBody) => {\n  return await axios.post(apiEndPoint + requestMapping, requestBody);\n};\nexport const httpGet = async requestMapping => {\n  return await axios.get(apiEndPoint + requestMapping);\n};","map":{"version":3,"names":["axios","apiEndPoint","getTokenFromCookie","AUTH_TOKEN","toast","interceptors","response","use","error","console","log","info","status","data","message","defaults","headers","post","httpPost","requestMapping","requestBody","httpGet","get"],"sources":["/home/eliezer/Projetos/globo-teste-tecnico/client/client/src/services/httpServices.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { apiEndPoint } from \"../util/config.json\";\nimport { getTokenFromCookie, AUTH_TOKEN } from \"../util/authentication.js\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  console.log(error);\n  if (!error.response) {\n    toast.info(\"Service Unavailable !!!\");\n    return { status: 503, data: [] };\n  }\n\n  const { status, data } = error.response;\n  console.log(error.response);\n  if (data) {\n    if (typeof data === \"string\") toast.error(data);\n    else toast.error(data.message);\n  }\n  return { status, data: [] };\n});\n\naxios.defaults.headers.post[AUTH_TOKEN] = getTokenFromCookie();\n\nexport const httpPost = async (requestMapping, requestBody) => {\n  return await axios.post(apiEndPoint + requestMapping, requestBody);\n};\n\nexport const httpGet = async requestMapping => {\n  return await axios.get(apiEndPoint + requestMapping);\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,kBAAkB,EAAEC,UAAU,QAAQ,2BAA2B;AAC1E,SAASC,KAAK,QAAQ,gBAAgB;AAEtCJ,KAAK,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,EAAEC,KAAK,IAAI;EAC7CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,IAAI,CAACA,KAAK,CAACF,QAAQ,EAAE;IACnBF,KAAK,CAACO,IAAI,CAAC,yBAAyB,CAAC;IACrC,OAAO;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAG,CAAC;EAClC;EAEA,MAAM;IAAED,MAAM;IAAEC;EAAK,CAAC,GAAGL,KAAK,CAACF,QAAQ;EACvCG,OAAO,CAACC,GAAG,CAACF,KAAK,CAACF,QAAQ,CAAC;EAC3B,IAAIO,IAAI,EAAE;IACR,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAET,KAAK,CAACI,KAAK,CAACK,IAAI,CAAC,CAAC,KAC3CT,KAAK,CAACI,KAAK,CAACK,IAAI,CAACC,OAAO,CAAC;EAChC;EACA,OAAO;IAAEF,MAAM;IAAEC,IAAI,EAAE;EAAG,CAAC;AAC7B,CAAC,CAAC;AAEFb,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,IAAI,CAACd,UAAU,CAAC,GAAGD,kBAAkB,EAAE;AAE9D,OAAO,MAAMgB,QAAQ,GAAG,OAAOC,cAAc,EAAEC,WAAW,KAAK;EAC7D,OAAO,MAAMpB,KAAK,CAACiB,IAAI,CAAChB,WAAW,GAAGkB,cAAc,EAAEC,WAAW,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAMF,cAAc,IAAI;EAC7C,OAAO,MAAMnB,KAAK,CAACsB,GAAG,CAACrB,WAAW,GAAGkB,cAAc,CAAC;AACtD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}