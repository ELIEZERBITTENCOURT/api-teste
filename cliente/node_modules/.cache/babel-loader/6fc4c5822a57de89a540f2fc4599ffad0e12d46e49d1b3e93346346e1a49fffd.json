{"ast":null,"code":"import { imageToBase64 } from \"../util/utils\";\nimport { httpPost, httpGet } from \"./httpServices\";\nexport const getGenres = async () => {\n  const {\n    data\n  } = await httpGet(\"api/movies/genres\");\n  return data;\n};\nexport const getLanguages = async () => {\n  const {\n    data\n  } = await httpGet(\"api/movies/languages\");\n  return data;\n};\nexport const getMovies = async () => {\n  const {\n    data: movies\n  } = await httpGet(\"api/movies\");\n  return movies;\n};\nexport const getPopularMovies = async () => {\n  const {\n    data: movies\n  } = await httpGet(\"api/movies/popular\");\n  return movies;\n};\nexport const getMovieInfo = async id => {\n  const {\n    data\n  } = await httpGet(`api/movies/${id}`);\n  return data.length ? data[0] : {};\n};\nexport const addMovie = async (data, image, user) => {\n  const base64Img = await imageToBase64(image);\n  data.genreId = parseInt(data.genreId);\n  data.languageId = parseInt(data.languageId);\n  data.base64Img = base64Img;\n  data.createdBy = user ? user.id : null;\n  data.active = \"Y\";\n  return await httpPost(\"api/movies\", data);\n};\nexport const addReview = async data => {\n  return await httpPost(\"api/movies/review\", data);\n};","map":{"version":3,"names":["imageToBase64","httpPost","httpGet","getGenres","data","getLanguages","getMovies","movies","getPopularMovies","getMovieInfo","id","length","addMovie","image","user","base64Img","genreId","parseInt","languageId","createdBy","active","addReview"],"sources":["/home/eliezer/Projetos/globo-teste-tecnico/client/client/src/services/movies.jsx"],"sourcesContent":["import { imageToBase64 } from \"../util/utils\";\nimport { httpPost, httpGet } from \"./httpServices\";\n\nexport const getGenres = async () => {\n  const { data } = await httpGet(\"api/movies/genres\");\n  return data;\n};\n\nexport const getLanguages = async () => {\n  const { data } = await httpGet(\"api/movies/languages\");\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data: movies } = await httpGet(\"api/movies\");\n  return movies;\n};\n\nexport const getPopularMovies = async () => {\n  const { data: movies } = await httpGet(\"api/movies/popular\");\n  return movies;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await httpGet(`api/movies/${id}`);\n  return data.length ? data[0] : {};\n};\n\nexport const addMovie = async (data, image, user) => {\n  const base64Img = await imageToBase64(image);\n  data.genreId = parseInt(data.genreId);\n  data.languageId = parseInt(data.languageId);\n  data.base64Img = base64Img;\n  data.createdBy = user ? user.id : null;\n  data.active = \"Y\";\n\n  return await httpPost(\"api/movies\", data);\n};\n\nexport const addReview = async data => {\n  return await httpPost(\"api/movies/review\", data);\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAC7C,SAASC,QAAQ,EAAEC,OAAO,QAAQ,gBAAgB;AAElD,OAAO,MAAMC,SAAS,GAAG,YAAY;EACnC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,OAAO,CAAC,mBAAmB,CAAC;EACnD,OAAOE,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,YAAY;EACtC,MAAM;IAAED;EAAK,CAAC,GAAG,MAAMF,OAAO,CAAC,sBAAsB,CAAC;EACtD,OAAOE,IAAI;AACb,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,YAAY;EACnC,MAAM;IAAEF,IAAI,EAAEG;EAAO,CAAC,GAAG,MAAML,OAAO,CAAC,YAAY,CAAC;EACpD,OAAOK,MAAM;AACf,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,YAAY;EAC1C,MAAM;IAAEJ,IAAI,EAAEG;EAAO,CAAC,GAAG,MAAML,OAAO,CAAC,oBAAoB,CAAC;EAC5D,OAAOK,MAAM;AACf,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAMC,EAAE,IAAI;EACtC,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMF,OAAO,CAAE,cAAaQ,EAAG,EAAC,CAAC;EAClD,OAAON,IAAI,CAACO,MAAM,GAAGP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAG,OAAOR,IAAI,EAAES,KAAK,EAAEC,IAAI,KAAK;EACnD,MAAMC,SAAS,GAAG,MAAMf,aAAa,CAACa,KAAK,CAAC;EAC5CT,IAAI,CAACY,OAAO,GAAGC,QAAQ,CAACb,IAAI,CAACY,OAAO,CAAC;EACrCZ,IAAI,CAACc,UAAU,GAAGD,QAAQ,CAACb,IAAI,CAACc,UAAU,CAAC;EAC3Cd,IAAI,CAACW,SAAS,GAAGA,SAAS;EAC1BX,IAAI,CAACe,SAAS,GAAGL,IAAI,GAAGA,IAAI,CAACJ,EAAE,GAAG,IAAI;EACtCN,IAAI,CAACgB,MAAM,GAAG,GAAG;EAEjB,OAAO,MAAMnB,QAAQ,CAAC,YAAY,EAAEG,IAAI,CAAC;AAC3C,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAG,MAAMjB,IAAI,IAAI;EACrC,OAAO,MAAMH,QAAQ,CAAC,mBAAmB,EAAEG,IAAI,CAAC;AAClD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}