{"ast":null,"code":"var _jsxFileName = \"/home/eliezer/Projetos/globo-teste-tecnico/client/client/src/components/common/InputFieldComponent.jsx\";\nimport React from \"react\";\nimport YearPicker from \"react-year-picker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTextBox = (type, name, value, onChange, disabled) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"form-control\",\n    type: type,\n    id: name,\n    name: name,\n    value: value,\n    onChange: onChange,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\nconst getTextArea = (name, value, onChange) => {\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"form-control\",\n    id: name,\n    name: name,\n    value: value,\n    onChange: onChange,\n    width: \"100%\",\n    rows: \"3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\nconst getDropdownField = (name, value, list, onChange) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: name,\n    name: name,\n    onChange: onChange,\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), list.map(obj => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: obj.id,\n        children: obj.name\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\nconst getUploadButton = (name, value, onChange) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: name,\n      name: name,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\nconst getYearlyCalendar = (name, value, onChange) => {\n  const onDateSelect = year => {\n    const element = {\n      currentTarget: {\n        id: name,\n        value: year,\n        name\n      }\n    };\n    onChange(element);\n  };\n  return /*#__PURE__*/_jsxDEV(YearPicker, {\n    id: name,\n    name: name,\n    onChange: onDateSelect,\n    width: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\nconst getRadioButton = (name, value, onChange, list) => {\n  const options = list.map(obj => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: name,\n        value: obj.value,\n        onClick: onChange\n      }, obj.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), obj.label, \" \\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\nconst getRangeInputType = (name, value, onChange, min, max, label) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      className: \"slider\",\n      name: name,\n      onChange: onChange,\n      value: value,\n      step: \"0.25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [label, \": \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\nconst InputFieldComponent = _ref => {\n  let {\n    type,\n    value,\n    error,\n    onChange,\n    name,\n    label,\n    list = [],\n    min = null,\n    max = null,\n    disabled = false\n  } = _ref;\n  let inputField;\n  if (\"text\" === type || \"password\" === type) {\n    inputField = getTextBox(type, name, value, onChange, disabled);\n  } else if (\"drop-down\" === type) {\n    inputField = getDropdownField(name, value, list, onChange);\n  } else if (\"textarea\" === type) {\n    inputField = getTextArea(name, value, onChange);\n  } else if (\"yearly-calendar\" === type) {\n    inputField = getYearlyCalendar(name, value, onChange);\n  } else if (\"upload\" === type) {\n    inputField = getUploadButton(name, value, onChange);\n  } else if (\"radio\" === type) {\n    inputField = getRadioButton(name, value, onChange, list);\n  } else if (\"range\" === type) {\n    inputField = getRangeInputType(name, value, onChange, min, max, label);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), inputField, error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_c = InputFieldComponent;\nexport default InputFieldComponent;\nvar _c;\n$RefreshReg$(_c, \"InputFieldComponent\");","map":{"version":3,"names":["React","YearPicker","getTextBox","type","name","value","onChange","disabled","getTextArea","getDropdownField","list","map","obj","id","getUploadButton","getYearlyCalendar","onDateSelect","year","element","currentTarget","getRadioButton","options","label","getRangeInputType","min","max","InputFieldComponent","error","inputField"],"sources":["/home/eliezer/Projetos/globo-teste-tecnico/client/client/src/components/common/InputFieldComponent.jsx"],"sourcesContent":["import React from \"react\";\nimport YearPicker from \"react-year-picker\";\n\nconst getTextBox = (type, name, value, onChange, disabled) => {\n  return (\n    <input\n      className=\"form-control\"\n      type={type}\n      id={name}\n      name={name}\n      value={value}\n      onChange={onChange}\n      disabled={disabled}\n    />\n  );\n};\n\nconst getTextArea = (name, value, onChange) => {\n  return (\n    <textarea\n      className=\"form-control\"\n      id={name}\n      name={name}\n      value={value}\n      onChange={onChange}\n      width=\"100%\"\n      rows=\"3\"\n    />\n  );\n};\n\nconst getDropdownField = (name, value, list, onChange) => {\n  return (\n    <select id={name} name={name} onChange={onChange} className=\"form-control\">\n      <option value=\"\"></option>\n      {list.map(obj => {\n        return (\n          <option key={obj.id} value={obj.id}>\n            {obj.name}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\nconst getUploadButton = (name, value, onChange) => {\n  return (\n    <React.Fragment>\n      &nbsp;&nbsp;&nbsp;\n      <input type=\"file\" id={name} name={name} onChange={onChange} />\n    </React.Fragment>\n  );\n};\n\nconst getYearlyCalendar = (name, value, onChange) => {\n  const onDateSelect = year => {\n    const element = {\n      currentTarget: {\n        id: name,\n        value: year,\n        name\n      }\n    };\n    onChange(element);\n  };\n  return (\n    <YearPicker id={name} name={name} onChange={onDateSelect} width=\"100%\" />\n  );\n};\n\nconst getRadioButton = (name, value, onChange, list) => {\n  const options = list.map(obj => {\n    return (\n      <React.Fragment>\n        <input\n          type=\"radio\"\n          name={name}\n          value={obj.value}\n          onClick={onChange}\n          key={obj.value}\n        />\n        {obj.label} &nbsp;&nbsp;\n      </React.Fragment>\n    );\n  });\n  return (\n    <React.Fragment>\n      <br />\n      {options}\n    </React.Fragment>\n  );\n};\n\nconst getRangeInputType = (name, value, onChange, min, max, label) => {\n  return (\n    <React.Fragment>\n      <br />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        className=\"slider\"\n        name={name}\n        onChange={onChange}\n        value={value}\n        step=\"0.25\"\n      />\n      <p>\n        {label}: {value}\n      </p>\n    </React.Fragment>\n  );\n};\n\nconst InputFieldComponent = ({\n  type,\n  value,\n  error,\n  onChange,\n  name,\n  label,\n  list = [],\n  min = null,\n  max = null,\n  disabled = false\n}) => {\n  let inputField;\n\n  if (\"text\" === type || \"password\" === type) {\n    inputField = getTextBox(type, name, value, onChange, disabled);\n  } else if (\"drop-down\" === type) {\n    inputField = getDropdownField(name, value, list, onChange);\n  } else if (\"textarea\" === type) {\n    inputField = getTextArea(name, value, onChange);\n  } else if (\"yearly-calendar\" === type) {\n    inputField = getYearlyCalendar(name, value, onChange);\n  } else if (\"upload\" === type) {\n    inputField = getUploadButton(name, value, onChange);\n  } else if (\"radio\" === type) {\n    inputField = getRadioButton(name, value, onChange, list);\n  } else if (\"range\" === type) {\n    inputField = getRangeInputType(name, value, onChange, min, max, label);\n  }\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      {inputField}\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default InputFieldComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}