{"ast":null,"code":"import { Component } from \"react\";\nimport Joi from \"joi-browser\";\nclass FormComponent extends Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    this.state = {\n      data: {},\n      errors: {}\n    };\n    this.validateInput = function (inputField, schema) {\n      let inputFieldName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      const validationResults = Joi.validate(inputField, schema);\n      let errors = {\n        ..._this.state.errors\n      };\n      if (!validationResults.error) {\n        if (inputFieldName) delete errors[inputFieldName];else errors = {};\n      } else {\n        validationResults.error.details.forEach(element => {\n          errors[element.path] = element.message;\n        });\n      }\n      _this.setState({\n        errors\n      });\n    };\n    this.handleChange = e => {\n      const data = {\n        ...this.state.data\n      };\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      data[name] = value;\n      this.setState({\n        data\n      });\n      if (\"confirmPassword\" !== name) this.validateInput({\n        [name]: value\n      }, {\n        [name]: this.schema[name]\n      }, name);\n    };\n  }\n}\nexport default FormComponent;","map":{"version":3,"names":["Component","Joi","FormComponent","state","data","errors","validateInput","inputField","schema","inputFieldName","validationResults","validate","error","details","forEach","element","path","message","setState","handleChange","e","name","value","currentTarget"],"sources":["/home/eliezer/Projetos/globo-teste-tecnico/client/client/src/components/common/FormComponent.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport Joi from \"joi-browser\";\n\nclass FormComponent extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validateInput = (inputField, schema, inputFieldName = null) => {\n    const validationResults = Joi.validate(inputField, schema);\n\n    let errors = { ...this.state.errors };\n    if (!validationResults.error) {\n      if (inputFieldName) delete errors[inputFieldName];\n      else errors = {};\n    } else {\n      validationResults.error.details.forEach(element => {\n        errors[element.path] = element.message;\n      });\n    }\n\n    this.setState({ errors });\n  };\n\n  handleChange = e => {\n    const data = { ...this.state.data };\n    const { name, value } = e.currentTarget;\n    data[name] = value;\n    this.setState({ data });\n    if (\"confirmPassword\" !== name)\n      this.validateInput(\n        { [name]: value },\n        { [name]: this.schema[name] },\n        name\n      );\n  };\n}\n\nexport default FormComponent;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,GAAG,MAAM,aAAa;AAE7B,MAAMC,aAAa,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA;IAAA;IAAA,KACpCG,KAAK,GAAG;MACNC,IAAI,EAAE,CAAC,CAAC;MACRC,MAAM,EAAE,CAAC;IACX,CAAC;IAAA,KAEDC,aAAa,GAAG,UAACC,UAAU,EAAEC,MAAM,EAA4B;MAAA,IAA1BC,cAAc,uEAAG,IAAI;MACxD,MAAMC,iBAAiB,GAAGT,GAAG,CAACU,QAAQ,CAACJ,UAAU,EAAEC,MAAM,CAAC;MAE1D,IAAIH,MAAM,GAAG;QAAE,GAAG,KAAI,CAACF,KAAK,CAACE;MAAO,CAAC;MACrC,IAAI,CAACK,iBAAiB,CAACE,KAAK,EAAE;QAC5B,IAAIH,cAAc,EAAE,OAAOJ,MAAM,CAACI,cAAc,CAAC,CAAC,KAC7CJ,MAAM,GAAG,CAAC,CAAC;MAClB,CAAC,MAAM;QACLK,iBAAiB,CAACE,KAAK,CAACC,OAAO,CAACC,OAAO,CAACC,OAAO,IAAI;UACjDV,MAAM,CAACU,OAAO,CAACC,IAAI,CAAC,GAAGD,OAAO,CAACE,OAAO;QACxC,CAAC,CAAC;MACJ;MAEA,KAAI,CAACC,QAAQ,CAAC;QAAEb;MAAO,CAAC,CAAC;IAC3B,CAAC;IAAA,KAEDc,YAAY,GAAGC,CAAC,IAAI;MAClB,MAAMhB,IAAI,GAAG;QAAE,GAAG,IAAI,CAACD,KAAK,CAACC;MAAK,CAAC;MACnC,MAAM;QAAEiB,IAAI;QAAEC;MAAM,CAAC,GAAGF,CAAC,CAACG,aAAa;MACvCnB,IAAI,CAACiB,IAAI,CAAC,GAAGC,KAAK;MAClB,IAAI,CAACJ,QAAQ,CAAC;QAAEd;MAAK,CAAC,CAAC;MACvB,IAAI,iBAAiB,KAAKiB,IAAI,EAC5B,IAAI,CAACf,aAAa,CAChB;QAAE,CAACe,IAAI,GAAGC;MAAM,CAAC,EACjB;QAAE,CAACD,IAAI,GAAG,IAAI,CAACb,MAAM,CAACa,IAAI;MAAE,CAAC,EAC7BA,IAAI,CACL;IACL,CAAC;EAAA;AACH;AAEA,eAAenB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}